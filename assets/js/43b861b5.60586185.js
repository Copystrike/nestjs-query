"use strict";(self.webpackChunknestjs_query=self.webpackChunknestjs_query||[]).push([[5219],{7167:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>i,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>u,toc:()=>l});var s=r(5893),n=r(1151);const a={title:"v0.8.3",author:"Doug Martin",author_title:"Creator",author_url:"https://github.com/tripss",author_image_url:"https://avatars1.githubusercontent.com/u/361261?v=4",tags:["releases","patch"]},o=void 0,u={permalink:"/nestjs-query/blog/2020/04/15/v0.8.3",editUrl:"https://github.com/tripss/nestjs-query/edit/master/documentation/blog/blog/2020-04-15-v0.8.3.md",source:"@site/blog/2020-04-15-v0.8.3.md",title:"v0.8.3",description:"* FIXED]  Add support for extending abstract object types [#82",date:"2020-04-15T00:00:00.000Z",formattedDate:"April 15, 2020",tags:[{label:"releases",permalink:"/nestjs-query/blog/tags/releases"},{label:"patch",permalink:"/nestjs-query/blog/tags/patch"}],readingTime:.05,hasTruncateMarker:!1,authors:[{name:"Doug Martin",title:"Creator",url:"https://github.com/tripss",imageURL:"https://avatars1.githubusercontent.com/u/361261?v=4"}],frontMatter:{title:"v0.8.3",author:"Doug Martin",author_title:"Creator",author_url:"https://github.com/tripss",author_image_url:"https://avatars1.githubusercontent.com/u/361261?v=4",tags:["releases","patch"]},unlisted:!1,prevItem:{title:"v0.8.2",permalink:"/nestjs-query/blog/2020/04/15/v0.8.2"},nextItem:{title:"v0.8.1",permalink:"/nestjs-query/blog/2020/04/08/v0.8.1"}},i={authorsImageUrls:[void 0]},l=[];function c(t){const e={a:"a",li:"li",ul:"ul",...(0,n.a)(),...t.components};return(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["[FIXED]  Add support for extending abstract object types ",(0,s.jsx)(e.a,{href:"https://github.com/tripss/nestjs-query/issues/82",children:"#82"})]}),"\n"]})}function p(t={}){const{wrapper:e}={...(0,n.a)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(c,{...t})}):c(t)}},1151:(t,e,r)=>{r.d(e,{Z:()=>u,a:()=>o});var s=r(7294);const n={},a=s.createContext(n);function o(t){const e=s.useContext(a);return s.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function u(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:o(t.components),s.createElement(a.Provider,{value:e},t.children)}}}]);